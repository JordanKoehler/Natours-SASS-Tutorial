
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark:#777;
$color-white: #fff;



/* Basic Reset, the star is the univeral */
*, 
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; /* 1 rem = 10px = 62.5% having a percentage is easier for peolpe to adjust for poor eyesite */ 
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box; /* supposed to help make our lives easier */ 
}

.header {
    height: 95vh; /* vh = viewport height and the 95 is like % */ 
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark,0.8)), 
        url(../img/hero.jpg); /* to have multiple backgrounds use commmas */
    background-size: cover; /* whatever width it will try to fit in the box */
    background-position: top; /* ensures that the image always stays at the top of the container */
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100% ); /* Starts from top right and goes clockwise. x y per each comma, you can remove or add commas to make different polygons */
}

.header__logo-box {
    position: absolute; /* the parent is header which is the position: relative */
    top: 4rem; /* its 40px becuase of the 30px border and then 10px padding almost */
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%; /* these are in relation to the parent element */ 
    left: 50%;
    transform: translate(-50%, -50%); /* these are in relation to the element so it takes - half of the height/width which then centers it */
    text-align: center;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden; /*used if your animations have a shake or something*/ 
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block; /* seprates the spans */ 
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* other animation things you can do: 
    animation-delay: 3s: delays when the animation starts
    animation-iteration-count: 3; how many times it plays the animation
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; /* another way to write animations, can do all in one line */ 
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }


    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s; /* short hand for transition */
    position: relative;
    backface-visibility: hidden;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-3px); /* Looks like an actual hover */ 
    box-shadow: 0 1rem 2rem rgba(0,0,0, .2);
}

.btn:active {
    transform: translateY(-1px); /* looks like a button press */ 
    box-shadow: 0 .5rem 1rem rgba(0,0,0, .2);
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;  
    animation-fill-mode: backwards; /* automatically applies 0 before the animation starts */
}

.btn::after {
    content: ""; /* must be specified even if its nothing */ 
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: $color-white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}